SMALL THINGS
============
[ ] Add ability to stick vectors, colors into XML files without having to split them into individual values
    - Colors specified via #rrggbbaa, or via (r, g, b, a)
    - Vector2f specified as (x, y)    
[ ] When a default is read to get an initial property for a Thing/MapTile, any IntegerRange key should automatically do a "pick()" and return a result instead of just returning the IntegerRange.

MEDIUM THINGS
=============
[ ] Tile coordinates aren't inherited right now -- fix this
[ ] Make it easier for enum classes to be defined, to have an operator<< defined, and to have it exposed to Lua.
[ ] Replace the error/trace functions with boost logging facilities

BIG THINGS
==========
[X] Create a std::unordered_map< std::string, std::vector< std::string > > that records the children of each parent.
    - Turns out this has required a huge refactor of the way I'm saving Metadata instances. Welp.
    
[ ] Revamp Actions
    - Right now, actions just execute immediately when popped from the queue, and then have an "action_time" where the actor is frozen.
    - Instead, actions should be split into the following stages:
        - "pending": The action is ready to be executed.
        - "pre_begin": Prior to the action being executed. Accounts for overall reaction time (based on Agility attribute).
        - "begin": When the action is first executed. Switches to "in_progress".
        - "in_progress": While the action is executing. Switches to "finish" when completed.
        - "finish": When the action is completed. Switches to "post_finish".
        - "post_finish": Recovery time after the action is completed. Switches to "processed".
        - "processed": Action is done, and the next action should be popped.
    
    - Some actions have to be fudged; for example, "move". Obviously, in real life, the move would start at "begin", progress from tile A to tile B during "in_progress", and end up at "finish". However, being a tile-based game, moves are atomic from tile to tile. So the move mmediately execute on "begin". "in_progress" is the amount of time the move actually took. Nothing happens on "finish", and "post_finish" stays at zero. This will best approximate what the player expects to happen -- if a monster is adjacent, about to attack, they can leap out of the way. (Of course, there's still the "pre_begin" Agility check, so they may not be fast enough.)

[ ] Smooth tile lighting
    - Split a tile into four quads
        - corners should be the average of all four surrounding tiles
        - mid-edges should be the average of the two tiles
        - center should be the single tile in question
    - Split a wall into two quads
        - ...and something something figure this out later
        
[ ] GUIPane animation for sliding in/out
        