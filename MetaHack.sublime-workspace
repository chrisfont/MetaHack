{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"noncopy",
				"noncopyable.hpp\t(Paths.h)"
			],
			[
				"SystemChore",
				"Systems::Choreographer::EventPlayerChanged::id"
			],
			[
				"m_list",
				"m_listboxLayout"
			],
			[
				"sfgui",
				"sfgui_extensions\t(CMakeLists.txt)"
			],
			[
				"_remove_del",
				"_remove_delayed_selection_unlogged"
			],
			[
				"_remove_d",
				"_remove_delayed_selection_logged\t(redis_helper.rb)"
			],
			[
				"censored",
				"config.censored_values_key_regex\t(yellogger.rb)"
			],
			[
				"mock_redi",
				"mock_redis_client"
			],
			[
				"is_logging",
				"is_logging_enabled_for_job?\t(redis_helper.rb)"
			],
			[
				"_app",
				"_append_request_info_to_logs\t(yellogger.rb)"
			],
			[
				"_append",
				"_append_current_user_to_logs\t(yellogger.rb)"
			],
			[
				"end",
				"end"
			],
			[
				"_test_",
				"_test_method_no_replacement"
			],
			[
				"sanitize_messa",
				"sanitize_message_param"
			],
			[
				"stripp",
				"stripped_and_decoded_string"
			],
			[
				"dec",
				"decoded_entity_string"
			],
			[
				"danger",
				"dangerous_tags_string"
			],
			[
				"and",
				"and_return"
			],
			[
				"ta",
				"takes_args_as_a_hash?\t(base_job.rb)"
			],
			[
				"serial_enqu",
				"serial_enqueue_hash_job"
			],
			[
				"is_",
				"is_logging_enabled_for_job?"
			],
			[
				"schedul",
				"scheduler_id_present"
			]
		]
	},
	"buffers":
	[
		{
			"file": "game/App.cpp",
			"settings":
			{
				"buffer_size": 11589,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 26781,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "services/FileSystemGameRules.h",
			"settings":
			{
				"buffer_size": 862,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"CMakeF",
				"CMake Format: Format Selection"
			],
			[
				"CMake Format",
				"CMake Format: Set Path"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"CMake",
				"Set Syntax: CMake"
			],
			[
				"mark",
				"Set Syntax: Markdown"
			],
			[
				"Markdown",
				"Set Syntax: Markdown"
			],
			[
				"markdown",
				"Set Syntax: Markdown"
			],
			[
				"markdown gfm",
				"Set Syntax: Markdown GFM"
			],
			[
				"sort",
				"SortList: Sort List"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install package control",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 207.800003052,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/greglindsey/personal/projects/MetaHack",
		"/home/greglindsey/personal/projects/MetaHack/config",
		"/home/greglindsey/personal/projects/MetaHack/services"
	],
	"file_history":
	[
		"/home/greglindsey/personal/projects/MetaHack/systems/SystemNarrator.cpp",
		"/home/greglindsey/personal/projects/MetaHack/config/Strings.h",
		"/home/greglindsey/personal/projects/MetaHack/config/Strings.cpp",
		"/home/greglindsey/personal/projects/MetaHack/utilities/Shortcuts.h",
		"/home/greglindsey/personal/projects/MetaHack/config/Paths.h",
		"/home/greglindsey/personal/projects/MetaHack/config/Paths.cpp",
		"/home/greglindsey/personal/projects/MetaHack/map/Map.cpp",
		"/home/greglindsey/personal/projects/MetaHack/game/AppStateGameMode.cpp",
		"/home/greglindsey/personal/projects/MetaHack/game/App.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionWield.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionWear.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionWait.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionUse.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionUnwield.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionUnlock.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionTurn.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionTakeOut.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionTakeOff.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionShoot.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionRead.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionQuaff.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionPutInto.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionOpen.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionMove.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionLock.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionInscribe.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionFill.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionEat.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionDrop.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionDie.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionClose.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionAttack.cpp",
		"/home/greglindsey/personal/projects/MetaHack/actions/Action.cpp",
		"/home/greglindsey/personal/projects/MetaHack/services/Strings.cpp",
		"/home/greglindsey/personal/projects/MetaHack/services/Strings.h",
		"/home/greglindsey/personal/projects/MetaHack/services/NullStrings.h",
		"/home/greglindsey/personal/projects/MetaHack/services/IStrings.h",
		"/home/greglindsey/personal/projects/MetaHack/include/stdafx.h",
		"/home/greglindsey/personal/projects/MetaHack/views/Standard2DGraphicViews.cpp",
		"/home/greglindsey/personal/projects/MetaHack/lua/LuaObject.cpp",
		"/home/greglindsey/personal/projects/MetaHack/services/FileSystemGameRules.cpp",
		"/home/greglindsey/personal/projects/MetaHack/services/DefaultPaths.cpp",
		"/home/greglindsey/personal/projects/MetaHack/services/DefaultPaths.h",
		"/home/greglindsey/personal/projects/MetaHack/services/IPaths.cpp",
		"/home/greglindsey/personal/projects/MetaHack/services/IPaths.h",
		"/home/greglindsey/personal/projects/MetaHack/config/Config.h",
		"/home/greglindsey/personal/projects/MetaHack/config/Config.cpp",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentInventory.cpp",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentInventory.h",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentManager.h",
		"/home/greglindsey/personal/projects/MetaHack/systems/SystemNarrator.h",
		"/home/greglindsey/personal/projects/MetaHack/components/modifiers/Physical.cpp",
		"/home/greglindsey/personal/projects/MetaHack/views/EntityCollectionGUIListView.cpp",
		"/home/greglindsey/personal/projects/MetaHack/views/EntityCollectionGUIListView.h",
		"/home/greglindsey/personal/projects/MetaHack/views/EntityCollectionGUIView.cpp",
		"/home/greglindsey/personal/projects/MetaHack/views/EntityCollectionGUIView.h",
		"/home/greglindsey/personal/projects/MetaHack/game/GameState.cpp",
		"/home/greglindsey/personal/projects/MetaHack/inventory/InventoryArea.cpp",
		"/home/greglindsey/personal/projects/MetaHack/inventory/InventoryArea.h",
		"/home/greglindsey/personal/projects/MetaHack/inventory/InventorySlot.h",
		"/home/greglindsey/personal/projects/MetaHack/gui/GUIWindow.cpp",
		"/home/greglindsey/personal/projects/MetaHack/sfgui_extensions/DecoratedWidget.hpp",
		"/home/greglindsey/personal/projects/MetaHack/sfgui_extensions/Decorated.hpp",
		"/home/greglindsey/personal/projects/MetaHack/game/App.h",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns/Event.cpp",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns/Event.h",
		"/home/greglindsey/personal/projects/MetaHack/game/GameState.h",
		"/home/greglindsey/personal/projects/MetaHack/gui/GUIObject.cpp",
		"/home/greglindsey/personal/projects/MetaHack/views/InventoryGUIView.cpp",
		"/home/greglindsey/personal/projects/MetaHack/main.cpp",
		"/home/greglindsey/personal/projects/MetaHack/systems/Manager.cpp",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns/Serializable.h",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns/Object.cpp",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns/Object.h",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns/ObjectRegistry.cpp",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns/ObjectRegistry.h",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns/Serializable.cpp",
		"/home/greglindsey/personal/projects/MetaHack/sfgui_extensions/Decorator.inc",
		"/home/greglindsey/personal/projects/MetaHack/state_machine/StateMachine.cpp",
		"/home/greglindsey/personal/projects/MetaHack/game_windows/StatusArea.cpp",
		"/home/greglindsey/personal/projects/MetaHack/game_windows/MessageLogView.cpp",
		"/home/greglindsey/personal/projects/MetaHack/gui/GUIDesktop.cpp",
		"/home/greglindsey/personal/projects/MetaHack/systems/SystemGeometry.h",
		"/home/greglindsey/personal/projects/MetaHack/systems/SystemGeometry.cpp",
		"/home/greglindsey/personal/projects/MetaHack/systems/SystemChoreographer.cpp",
		"/home/greglindsey/personal/projects/MetaHack/views/InventoryGUIListView.cpp",
		"/home/greglindsey/personal/projects/MetaHack/entity/EntityId.h",
		"/home/greglindsey/personal/projects/MetaHack/entity/EntityId.cpp",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentPosition.h",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentPosition.cpp",
		"/home/greglindsey/personal/projects/MetaHack/game/AppStateGameMode.h",
		"/home/greglindsey/personal/projects/MetaHack/gui/GUIObject.h",
		"/home/greglindsey/personal/projects/MetaHack/text/UI.txt",
		"/home/greglindsey/personal/projects/MetaHack/inventory/InventorySelection.h",
		"/home/greglindsey/personal/projects/MetaHack/views/InventoryGUIView.h",
		"/home/greglindsey/personal/projects/MetaHack/views/EntityView.h",
		"/home/greglindsey/personal/projects/MetaHack/views/EntityView.cpp",
		"/home/greglindsey/personal/projects/MetaHack/views/EntityGUIView.h",
		"/home/greglindsey/personal/projects/MetaHack/views/EntityGUIView.cpp",
		"/home/greglindsey/personal/projects/MetaHack/views/EntityGUIIconView.h",
		"/home/greglindsey/personal/projects/MetaHack/views/EntityGUIIconView.cpp",
		"/home/greglindsey/personal/projects/MetaHack/CMakeLists.txt",
		"/home/greglindsey/personal/projects/MetaHack/views/InventoryGUIListView.h",
		"/home/greglindsey/personal/projects/MetaHack/views/Standard2DGraphicViews.h",
		"/home/greglindsey/personal/projects/MetaHack/game_windows/StatusArea.h",
		"/home/greglindsey/personal/projects/MetaHack/game_windows/MessageLogView.h",
		"/home/greglindsey/personal/projects/MetaHack/services/FallbackConfigSettings.cpp",
		"/home/greglindsey/personal/projects/SFGUI/CMakeLists.txt",
		"/home/greglindsey/personal/projects/SFGUI/cmake/Modules/FindSFML.cmake",
		"/home/greglindsey/personal/projects/MetaHack/cmake_modules/FindSFML.cmake",
		"/home/greglindsey/personal/projects/MetaHack/SFGUI/CMakeLists.txt",
		"/home/greglindsey/personal/projects/MetaHack/.gitmodules",
		"/home/greglindsey/personal/projects/MetaHack/game/AppState.h",
		"/home/greglindsey/personal/projects/MetaHack/keybuffer/KeyBuffer.h",
		"/home/greglindsey/personal/projects/MetaHack/services/IMessageLog.h",
		"/home/greglindsey/personal/projects/MetaHack/services/IMessageLog.cpp",
		"/home/greglindsey/personal/projects/MetaHack/services/MessageLog.cpp",
		"/home/greglindsey/personal/projects/MetaHack/state_machine/State.h",
		"/home/greglindsey/personal/projects/MetaHack/keybuffer/KeyBuffer.cpp",
		"/home/greglindsey/personal/projects/MetaHack/gui/GUIWindow.h",
		"/home/greglindsey/personal/projects/MetaHack/sfgui_extensions/Widgets.hpp",
		"/home/greglindsey/personal/projects/MetaHack/sfgui_extensions/ListBox.hpp",
		"/home/greglindsey/personal/projects/MetaHack/sfgui_extensions/ListBox.cpp",
		"/home/greglindsey/personal/projects/MetaHack/sfgui_extensions/EntryPlus.hpp",
		"/home/greglindsey/personal/projects/MetaHack/sfgui_extensions/EntryPlus.cpp",
		"/home/greglindsey/personal/projects/MetaHack/game/AppStateMainMenu.cpp",
		"/home/greglindsey/personal/projects/MetaHack/game/AppStateMainMenu.h",
		"/home/greglindsey/personal/projects/MetaHack/game/AppStateSplashScreen.cpp"
	],
	"find":
	{
		"height": 44.0
	},
	"find_in_files":
	{
		"height": 136.6,
		"where_history":
		[
			"*.c,*.cpp,*.h",
			"",
			"types",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"m_layout#include",
			"IStrings",
			"S<IStrings>()",
			"IStrings",
			"#include \"services/IStrings.h\"\n",
			"#include \"services/IStrings.h\"",
			"IStrings",
			"FileName",
			"IPaths",
			"DefaultPaths",
			"EXPAND",
			"InventorySlot",
			"CloseHandle",
			"ResizeHandle",
			"CollapseHandle",
			"CloseHandle",
			"m_gameState.components",
			"GAME.components",
			"Got event",
			"Object.cpp",
			"NEW",
			"demangle",
			"addObserver",
			"demangle",
			"CLOG",
			"SYSTEMS",
			"\"StatusArea\"",
			"  \n",
			"doEventSubscriptions_V",
			"IKeyBuffer",
			"KeyBuffer",
			"\"AppStateGameMode\"",
			"\"GUI\"",
			"MessageLogView",
			"::id",
			"onEvent_V",
			"get_enter",
			"m_box",
			"SetCursor",
			"std::bind",
			"\"GUI\"",
			"frame_clock",
			"VectorMap",
			"m_vectorMap",
			"VectorMap",
			"VectorMap.h",
			"int.h",
			"ModifiableInt",
			"bool.h",
			"ModifiableBool",
			"0ULL",
			"m_modifierArrayMap",
			"ModifierArrayMap",
			"types/GameObject.h",
			"getDisplayName",
			"GameObject",
			"getDisplayName",
			"find",
			"unexpected",
			"@todo",
			"**TODO**",
			"@todo",
			"**TODO**",
			"\n  ",
			"**TODO**",
			"TODO",
			"**TODO**",
			"@todo",
			"<>",
			"\\todo",
			"276",
			"277",
			"276",
			"@todo",
			"LIBRARY_LINKDIRS",
			"main.cpp"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"#include",
			"Config::strings()",
			"m_layout",
			"frameClock",
			"DequeMap",
			"m_dequeMap",
			"DequeMap",
			"int",
			"bool",
			"m_modifierVectorMap",
			"ModifierVectorMap",
			"**TODO**"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "game/App.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11589,
						"regions":
						{
						},
						"selection":
						[
							[
								353,
								353
							]
						],
						"settings":
						{
							"SL.686.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1552403758.95,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26781,
						"regions":
						{
						},
						"selection":
						[
							[
								16717,
								16717
							]
						],
						"settings":
						{
							"SL.35.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										16771,
										16772
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										16366,
										16367
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										16771,
										16772
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										16366,
										16367
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/CMake/CMake.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1552403557.25,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8282.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "services/FileSystemGameRules.h",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 862,
						"regions":
						{
						},
						"selection":
						[
							[
								156,
								156
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										860,
										861
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										155,
										156
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1552403756.61,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 31.0
	},
	"input":
	{
		"height": 52.8
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 196.600006104
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "MetaHack.sublime-project",
	"replace":
	{
		"height": 79.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"App.cpp",
				"game/App.cpp"
			],
			[
				"Action.cpp",
				"actions/Action.cpp"
			],
			[
				"stdafx.h",
				"include/stdafx.h"
			],
			[
				"C",
				"CMakeLists.txt"
			],
			[
				"SystemNarrator.h",
				"systems/SystemNarrator.h"
			],
			[
				"ComponentInventory.cpp",
				"components/ComponentInventory.cpp"
			],
			[
				"ComponentInventory.h",
				"components/ComponentInventory.h"
			],
			[
				"CMake",
				"CMakeLists.txt"
			],
			[
				"Event.cpp",
				"design_patterns/Event.cpp"
			],
			[
				"Manager.cpp",
				"systems/Manager.cpp"
			],
			[
				"App.h",
				"game/App.h"
			],
			[
				"CMakeLists.txt",
				"CMakeLists.txt"
			],
			[
				"Event.h",
				"design_patterns/Event.h"
			],
			[
				"AppStateGameMode.cpp",
				"game/AppStateGameMode.cpp"
			],
			[
				"Object.cpp",
				"design_patterns/Object.cpp"
			],
			[
				"Object.h",
				"design_patterns/Object.h"
			],
			[
				"EntityId.cpp",
				"entity/EntityId.cpp"
			],
			[
				"EntityId.h",
				"entity/EntityId.h"
			],
			[
				"COmponentPosition.h",
				"components/ComponentPosition.h"
			],
			[
				"GUIObject.cpp",
				"gui/GUIObject.cpp"
			],
			[
				"SystemCho",
				"systems/SystemChoreographer.cpp"
			],
			[
				"Status",
				"game_windows/StatusArea.cpp"
			],
			[
				"EntityId.",
				"entity/EntityId.cpp"
			],
			[
				"EntityView.cpp",
				"views/EntityView.cpp"
			],
			[
				"InventorySelection.h",
				"inventory/InventorySelection.h"
			],
			[
				"UI.txt",
				"text/UI.txt"
			],
			[
				"CMakeLists",
				"SFGUI/CMakeLists.txt"
			],
			[
				".gitmodules",
				".gitmodules"
			],
			[
				"CMak",
				"CMakeLists.txt"
			],
			[
				"StatusArea.cpp",
				"game_windows/StatusArea.cpp"
			],
			[
				"MessageLogView",
				"game_windows/MessageLogView.cpp"
			],
			[
				"MessageLog.cpp",
				"services/MessageLog.cpp"
			],
			[
				"KeyBuffer.cpp",
				"keybuffer/KeyBuffer.cpp"
			],
			[
				"KeyBuffer.h",
				"keybuffer/KeyBuffer.h"
			],
			[
				"AppStateGameMode.h",
				"game/AppStateGameMode.h"
			],
			[
				"Key",
				"keybuffer/KeyBuffer.cpp"
			],
			[
				"main.cpp",
				"main.cpp"
			],
			[
				"App.c",
				"game/App.cpp"
			],
			[
				"MessageLogView.cpp",
				"game_windows/MessageLogView.cpp"
			],
			[
				"MapTile.cpp",
				"maptile/MapTile.cpp"
			],
			[
				"ComponentManager.cpp",
				"components/ComponentManager.cpp"
			],
			[
				"ComponentInventory",
				"components/ComponentInventory.cpp"
			],
			[
				"ComponentHealth.cpp",
				"components/ComponentHealth.cpp"
			],
			[
				"ActionCRTP.h",
				"actions/ActionCRTP.h"
			],
			[
				"Action.h",
				"actions/Action.h"
			],
			[
				"CMakeL",
				"CMakeLists.txt"
			],
			[
				"GameObject.h",
				"types/GameObject.h"
			],
			[
				"doxygen_log.txt",
				"doxygen_log.txt"
			],
			[
				"LuaObject.h",
				"lua/LuaObject.h"
			],
			[
				"Visitor.h",
				"design_patterns/Visitor.h"
			],
			[
				"Color.h",
				"types/Color.h"
			],
			[
				"LuaObject.cpp",
				"lua/LuaObject.cpp"
			],
			[
				"main",
				"main.cpp"
			],
			[
				"EntityFac",
				"entity/EntityFactory.cpp"
			],
			[
				"FindSFGUI",
				"cmake_modules/FindSFGUI.cmake"
			],
			[
				"Vec2.cpp",
				"types/Vec2.cpp"
			],
			[
				"Vec2.h",
				"types/Vec2.h"
			],
			[
				"resque.rb",
				"config/initializers/resque.rb"
			],
			[
				"environment.rb",
				"config/environment.rb"
			],
			[
				"Gemfile.lock",
				"Gemfile.lock"
			],
			[
				"application.rb",
				"config/application.rb"
			],
			[
				"spec_helper.rb",
				"spec/spec_helper.rb"
			],
			[
				"Appr",
				"Appraisals"
			],
			[
				"candidate/home_controller",
				"app/controllers/candidate/home_controller.rb"
			],
			[
				"users_controller.rb",
				"app/controllers/users_controller.rb"
			],
			[
				"sessions_controller",
				"app/controllers/sessions_controller.rb"
			],
			[
				"root_routes",
				"config/routes/root_routes.rb"
			],
			[
				"routes.rb",
				"config/routes.rb"
			],
			[
				"v2_routes",
				"config/routes/api/v2.2_routes.rb"
			],
			[
				"rails_helper",
				"spec/rails_helper.rb"
			],
			[
				"event_attendees/repository.rb",
				"lib/event_attendees/repository.rb"
			],
			[
				"v2/r2/events_controller.rb",
				"app/controllers/api/v2/r2/events_controller.rb"
			],
			[
				"api_rou",
				"config/routes/api/v2.2_routes.rb"
			],
			[
				"application_controller_spec.rb",
				"spec/controllers/application_controller_spec.rb"
			],
			[
				"Gemfile",
				"Gemfile"
			],
			[
				"production",
				"config/environments/production.rb"
			],
			[
				"html_sanitiz",
				"spec/concern/html_sanitizer_concern_spec.rb"
			],
			[
				"html_strin",
				"spec/utility/html_string_sanitizer_spec.rb"
			],
			[
				"REA",
				"README.md"
			],
			[
				"README",
				"client/node_modules/colors/ReadMe.md"
			],
			[
				"html_string_",
				"spec/utility/html_string_sanitizer_spec.rb"
			],
			[
				"utility/html",
				"lib/utility/html_string_sanitizer.rb"
			],
			[
				".ruby-version",
				".ruby-version"
			],
			[
				"job_logging_spec",
				"spec/redis_jobs/job_logging_spec.rb"
			],
			[
				"redis_job",
				"lib/redis_jobs/base_job.rb"
			],
			[
				"redis_helper_spec.rb",
				"spec/recsolu/redis_helper_spec.rb"
			],
			[
				"redis_helper",
				"lib/recsolu/redis_helper.rb"
			],
			[
				"html_sanitizer_concern.rb",
				"app/controllers/concerns/html_sanitizer_concern.rb"
			],
			[
				"yellogger_spec",
				"spec/initializers/yellogger_spec.rb"
			],
			[
				"yellogger.rb",
				"config/initializers/yellogger.rb"
			],
			[
				"string_saniti",
				"spec/utility/html_string_sanitizer_spec.rb"
			],
			[
				"html_string",
				"lib/utility/html_string_sanitizer.rb"
			],
			[
				"workflow_attach",
				"app/models/workflow_attachment.rb"
			],
			[
				"rc_micro",
				"rc_microsoft_structure.sql"
			],
			[
				"spec/initi",
				"spec/initializers/yellogger_spec.rb"
			],
			[
				"application_record.rb",
				"app/models/application_record.rb"
			],
			[
				"html_string_sanitizer_spec",
				"spec/utility/html_string_sanitizer_spec.rb"
			],
			[
				"old_sanit",
				"lib/utility/sanitizers/old_html_input_sanitizer.rb"
			],
			[
				"html_sani",
				"spec/concern/html_sanitizer_concern_spec.rb"
			],
			[
				"html_",
				"lib/concerns/html_sanitizer_concern.rb"
			],
			[
				"html_string_sanitizer_spec.rb",
				"spec/utility/html_string_sanitizer_spec.rb"
			],
			[
				"html_string_sanitizer.rb",
				"lib/utility/html_string_sanitizer.rb"
			],
			[
				"old",
				"lib/utility/sanitizers/old_html_input_sanitizer.rb"
			],
			[
				"settings_controller",
				"app/controllers/users/candidates/profile/settings_controller.rb"
			],
			[
				"settings_controller_spec.rb",
				"spec/controllers/candidate/profile/settings_controller_spec.rb"
			],
			[
				"field_answer_formatter_spec",
				"spec/excel_exporter/utility/field_answer_formatter_spec.rb"
			],
			[
				"html_sanitizer_concern_spec.rb",
				"spec/concerns/html_sanitizer_concern_spec.rb"
			],
			[
				"html_string_sani",
				"lib/utility/html_string_sanitizer.rb"
			],
			[
				"Gemfiles",
				"client/node_modules/draft-js/lib/getTextContentFromFiles.js"
			],
			[
				"old_",
				"lib/utility/sanitizers/old_html_input_sanitizer.rb"
			],
			[
				"html_saniti",
				"spec/concerns/html_sanitizer_concern_spec.rb"
			],
			[
				"presenters/users/index_presenter.rb",
				"app/presenters/users/index_presenter.rb"
			],
			[
				"spec/presenters/users/index_",
				"spec/presenters/users/index_presenter_spec.rb"
			],
			[
				"environments/production.rb",
				"config/environments/production.rb"
			],
			[
				"translation_controll",
				"app/controllers/admin/translations_controller.rb"
			],
			[
				"strong_par",
				"config/initializers/strong_parameter_testing.rb"
			],
			[
				"users_controller",
				"app/controllers/users_controller.rb"
			],
			[
				"strong_param",
				"config/initializers/strong_parameters.rb"
			],
			[
				"test.rb",
				"config/environments/test.rb"
			],
			[
				"develop",
				"config/environments/development.rb"
			],
			[
				"ApplicationRecord",
				"app/models/application_record.rb"
			],
			[
				"events/ar_model.rb",
				"lib/events/ar_model.rb"
			],
			[
				"lib/events/creation/director.rb",
				"lib/events/creation/director.rb"
			],
			[
				"session_repository.rb",
				"lib/events/session_repository.rb"
			],
			[
				"users/repository.rb",
				"lib/users/repository.rb"
			],
			[
				"session_attendance.rb",
				"app/models/session_attendance.rb"
			],
			[
				"document_converter.rb",
				"app/models/document_converter.rb"
			],
			[
				"strong_parameters.rb",
				"config/initializers/strong_parameters.rb"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 625.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/apps/yellogger.sublime-project"
			]
		],
		"width": 475.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 326.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
