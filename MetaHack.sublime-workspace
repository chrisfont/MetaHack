{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"SystemChore",
				"Systems::Choreographer::EventPlayerChanged::id"
			],
			[
				"m_list",
				"m_listboxLayout"
			],
			[
				"sfgui",
				"sfgui_extensions\t(CMakeLists.txt)"
			],
			[
				"_remove_del",
				"_remove_delayed_selection_unlogged"
			],
			[
				"_remove_d",
				"_remove_delayed_selection_logged\t(redis_helper.rb)"
			],
			[
				"censored",
				"config.censored_values_key_regex\t(yellogger.rb)"
			],
			[
				"mock_redi",
				"mock_redis_client"
			],
			[
				"is_logging",
				"is_logging_enabled_for_job?\t(redis_helper.rb)"
			],
			[
				"_app",
				"_append_request_info_to_logs\t(yellogger.rb)"
			],
			[
				"_append",
				"_append_current_user_to_logs\t(yellogger.rb)"
			],
			[
				"end",
				"end"
			],
			[
				"_test_",
				"_test_method_no_replacement"
			],
			[
				"sanitize_messa",
				"sanitize_message_param"
			],
			[
				"stripp",
				"stripped_and_decoded_string"
			],
			[
				"dec",
				"decoded_entity_string"
			],
			[
				"danger",
				"dangerous_tags_string"
			],
			[
				"and",
				"and_return"
			],
			[
				"ta",
				"takes_args_as_a_hash?\t(base_job.rb)"
			],
			[
				"serial_enqu",
				"serial_enqueue_hash_job"
			],
			[
				"is_",
				"is_logging_enabled_for_job?"
			],
			[
				"schedul",
				"scheduler_id_present"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Searching 373 files for \"InventorySlot\" (case sensitive)\n\n/home/greglindsey/personal/projects/MetaHack/actions/ActionQuaff.cpp:\n   46      auto subject = getSubject();\n   47      auto object = getObject();\n   48:     auto contents = components.inventory.of(object)[InventorySlot::Zero];\n   49  \n   50      printMessageBegin(systems, arguments);\n\n/home/greglindsey/personal/projects/MetaHack/components/ComponentInventory.cpp:\n   72      if (isPlayer)\n   73      {\n   74:       if (m_entities.count(InventorySlot::Zero) != 0)\n   75        {\n   76          /// @todo Move anything in this slot to a new slot.  This will be required\n   ..\n   78          CLOG(ERROR, \"Inventory\") << \"slot 0 of inventory already contains the player\";\n   79        }\n   80:       m_entities[InventorySlot::Zero] = entity;\n   81        return true;\n   82      }\n   ..\n   86      if (found_thing_id == m_entities.cend())\n   87      {\n   88:       for (InventorySlot slot = InventorySlot::Min; slot < InventorySlot::Max; ++slot)\n   89        {\n   90          if (m_entities.count(slot) == 0)\n   ..\n  213    }\n  214  \n  215:   bool ComponentInventory::contains(InventorySlot slot)\n  216    {\n  217      return (m_entities.count(slot) != 0);\n  218    }\n  219  \n  220:   InventorySlot ComponentInventory::operator[](EntityId entity)\n  221    {\n  222      auto iter = find(entity);\n  ...\n  227      }\n  228  \n  229:     return InventorySlot::Invalid;\n  230    }\n  231  \n  232:   EntityId ComponentInventory::operator[](InventorySlot slot)\n  233    {\n  234      return (m_entities.at(slot));\n  ...\n  259    }\n  260  \n  261:   EntityId ComponentInventory::remove(InventorySlot slot)\n  262    {\n  263      EntityId removed_thing;\n\n/home/greglindsey/personal/projects/MetaHack/components/ComponentInventory.h:\n    1  #pragma once\n    2  \n    3: #include \"inventory/InventorySlot.h\"\n    4  #include \"entity/EntityId.h\"\n    5  \n    .\n   11  \n   12    // Using std::map here because we DO need to iterate over a sorted list often\n   13:   using EntityMap = std::map<InventorySlot, EntityId>;\n   14:   using EntityPair = std::pair<InventorySlot, EntityId>;\n   15  \n   16    /// An Inventory is a collection of Entities.  It has an unchangeable owner.\n   ..\n   40  \n   41      /// Gets a vector representing the entities map.\n   42:     /// @todo This is temporary until I get rid of InventorySlots altogether.\n   43      std::vector<EntityId> getCollection();\n   44  \n   ..\n   62  \n   63      bool contains(EntityId entity);\n   64:     bool contains(InventorySlot slot);\n   65  \n   66:     InventorySlot operator[](EntityId entity);\n   67  \n   68:     EntityId operator[](InventorySlot slot);\n   69  \n   70      /// Splits an inventory item with a quantity > 1 into two items.\n   ..\n   83      EntityId remove(EntityId entity);\n   84  \n   85:     EntityId remove(InventorySlot slot);\n   86  \n   87      EntityId getLargestEntity();\n\n/home/greglindsey/personal/projects/MetaHack/game/AppStateGameMode.cpp:\n  341          if (key_number != -1)\n  342          {\n  343:           m_inventorySelection->toggleSelection(static_cast<InventorySlot>(key_number));\n  344            return false;\n  345          }\n  ...\n 1168      if (!key.alt && !key.control && key_number != -1)\n 1169      {\n 1170:       m_actionInProgress->setTarget(m_inventorySelection->getEntity(static_cast<InventorySlot>(key_number)));\n 1171        director.queueEntityAction(player, std::move(m_actionInProgress));\n 1172        m_inventoryAreaShowsPlayer = false;\n\n/home/greglindsey/personal/projects/MetaHack/inventory/InventoryArea.h:\n    6  \n    7  #include \"GUIWindow.h\"\n    8: #include \"inventory/InventorySlot.h\"\n    9  #include \"views/EntityCollectionGUIView.h\"\n   10  \n\n/home/greglindsey/personal/projects/MetaHack/inventory/InventorySelection.cpp:\n   44  }\n   45  \n   46: void InventorySelection::toggleSelection(InventorySlot selection)\n   47  {\n   48    if (m_viewed == EntityId::Void)\n   ..\n   82  }\n   83  \n   84: std::vector<InventorySlot> const& InventorySelection::getSelectedSlots()\n   85  {\n   86    return m_selectedSlots;\n   ..\n  200  }\n  201  \n  202: EntityId InventorySelection::getEntity(InventorySlot selection)\n  203  {\n  204    EntityId viewed = m_viewed;\n  ...\n  225  }\n  226  \n  227: char InventorySelection::getCharacter(InventorySlot slot)\n  228  {\n  229    return getCharacter(static_cast<unsigned int>(slot));\n  ...\n  254  }\n  255  \n  256: InventorySlot InventorySelection::getSlot(char character)\n  257  {\n  258    unsigned int slot_number;\n  ...\n  277    }\n  278  \n  279:   return static_cast<InventorySlot>(slot_number);\n  280  }\n  281  \n\n/home/greglindsey/personal/projects/MetaHack/inventory/InventorySelection.h:\n    2  \n    3  #include \"entity/EntityId.h\"\n    4: #include \"inventory/InventorySlot.h\"\n    5  #include \"Object.h\"\n    6  \n    .\n   31    struct EventSelectionChanged : public ConcreteEvent<EventSelectionChanged>\n   32    {\n   33:     EventSelectionChanged(std::vector<InventorySlot> slots_, unsigned int quantity_)\n   34        :\n   35        slots{ slots_ },\n   ..\n   37      {}\n   38  \n   39:     std::vector<InventorySlot> const slots;\n   40      unsigned int quantity;\n   41  \n   ..\n   59    void setViewed(EntityId entity);\n   60  \n   61:   void toggleSelection(InventorySlot selection);\n   62    size_t getSelectedSlotCount() const;\n   63:   std::vector<InventorySlot> const& getSelectedSlots();\n   64    std::vector<EntityId> getSelectedThings();\n   65    void clearSelectedSlots();\n   ..\n   72    bool decSelectedQuantity();\n   73  \n   74:   EntityId getEntity(InventorySlot selection);\n   75  \n   76    /// @todo Not sure if these actually belong here, or somewhere else.\n   77:   static char getCharacter(InventorySlot slot);\n   78    static char getCharacter(unsigned int slot_number);\n   79:   static InventorySlot getSlot(char character);\n   80  \n   81  protected:\n   ..\n   86  \n   87    /// Vector of selected inventory slots.\n   88:   std::vector< InventorySlot > m_selectedSlots;\n   89  \n   90    /// Reference to quantity of topmost selected item.\n\n/home/greglindsey/personal/projects/MetaHack/inventory/InventorySlot.cpp:\n    2  \n    3  #include \"AssertHelper.h\"\n    4: #include \"inventory/InventorySlot.h\"\n    5  \n    6  /// Static instances\n    7: InventorySlot InventorySlot::Zero = InventorySlot(0);\n    8: InventorySlot InventorySlot::Min = InventorySlot(1);\n    9: InventorySlot InventorySlot::Max = InventorySlot(UINT_MAX - 1);\n   10: InventorySlot InventorySlot::Invalid = InventorySlot(UINT_MAX);\n   11  \n   12: void to_json(json& j, InventorySlot const& obj)\n   13  {\n   14    j = static_cast<std::string>(obj);\n   15  }\n   16  \n   17: void from_json(json const& j, InventorySlot& obj)\n   18  {\n   19:   obj = InventorySlot(j.get<std::string>());\n   20  }\n   21  \n   22: unsigned int InventorySlot::stringToSlot(std::string str)\n   23  {\n   24    unsigned int slot;\n   ..\n   52  }\n   53  \n   54: std::string InventorySlot::slotToString(unsigned int slot)\n   55  {\n   56    std::string str;\n\n/home/greglindsey/personal/projects/MetaHack/inventory/InventorySlot.h:\n    5  #include <boost/serialization/strong_typedef.hpp>\n    6  \n    7: class InventorySlot\n    8  {\n    9  public:\n   10:   InventorySlot()\n   11      :\n   12      m_slot{ 0 }\n   13    {}\n   14  \n   15:   InventorySlot(unsigned int slot)\n   16      :\n   17      m_slot{ slot }\n   18    {}\n   19  \n   20:   InventorySlot(std::string str)\n   21      :\n   22      m_slot{ stringToSlot(str) }\n   ..\n   33    }\n   34  \n   35:   InventorySlot& operator++()\n   36    {\n   37      ++m_slot;\n   ..\n   39    }\n   40  \n   41:   InventorySlot operator++(int)\n   42    {\n   43:     InventorySlot tmp(*this);\n   44      operator++();\n   45      return tmp;\n   46    }\n   47  \n   48:   InventorySlot& operator--()\n   49    {\n   50      --m_slot;\n   ..\n   52    }\n   53  \n   54:   InventorySlot operator--(int)\n   55    {\n   56:     InventorySlot tmp(*this);\n   57      operator--();\n   58      return tmp;\n   59    }\n   60  \n   61:   friend std::ostream& operator<<(std::ostream& os, InventorySlot const& obj)\n   62    {\n   63      os << static_cast<std::string>(obj);\n   ..\n   65    }\n   66  \n   67:   friend bool operator==(InventorySlot const& first, InventorySlot const& second)\n   68    {\n   69      return first.m_slot == second.m_slot;\n   70    }\n   71  \n   72:   friend bool operator!=(InventorySlot const& first, InventorySlot const& second)\n   73    {\n   74      return !operator==(first, second);\n   75    }\n   76  \n   77:   friend bool operator<(InventorySlot const& first, InventorySlot const& second)\n   78    {\n   79      return first.m_slot < second.m_slot;\n   80    }\n   81  \n   82:   friend bool operator>=(InventorySlot const& first, InventorySlot const& second)\n   83    {\n   84      return !operator<(first, second);\n   85    }\n   86  \n   87:   friend bool operator>(InventorySlot const& first, InventorySlot const& second)\n   88    {\n   89      return operator<(second, first);\n   90    }\n   91  \n   92:   friend bool operator<=(InventorySlot const& first, InventorySlot const& second)\n   93    {\n   94      return !operator>(first, second);\n   95    }\n   96  \n   97:   friend void to_json(json& j, InventorySlot const& obj);\n   98:   friend void from_json(json const& j, InventorySlot& obj);\n   99  \n  100    // Static instances\n  101:   static InventorySlot Zero;\n  102:   static InventorySlot Min;\n  103:   static InventorySlot Max;\n  104:   static InventorySlot Invalid;\n  105  \n  106  protected:\n\n84 matches across 9 files\n\n\nSearching 373 files for \"EXPAND\" (case sensitive)\n\n/home/greglindsey/personal/projects/MetaHack/game_windows/StatusArea.cpp:\n  118  \n  119    // Place controls in the right spots in the table.\n  120:   auto const fillAndExpand = sfg::Table::FILL | sfg::Table::EXPAND;\n  121    auto const fill = sfg::Table::FILL;\n  122    auto const padding = sf::Vector2f(2.f, 1.f);\n\n/home/greglindsey/personal/projects/MetaHack/views/InventoryGUIListView.cpp:\n   11  \n   12    auto tempLabel = sfg::Label::Create();\n   13:   auto const fillAndExpand = sfg::Table::FILL | sfg::Table::EXPAND;\n   14    auto const fill = sfg::Table::FILL;\n   15    auto const padding = sf::Vector2f(5.f, 5.f);\n\n2 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 10210,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 27153,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "components/ComponentInventory.cpp",
			"settings":
			{
				"buffer_size": 8879,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "components/ComponentInventory.h",
			"settings":
			{
				"buffer_size": 3538,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "components/ComponentManager.h",
			"settings":
			{
				"buffer_size": 6711,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/EntityCollectionGUIListView.cpp",
			"settings":
			{
				"buffer_size": 1329,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/EntityCollectionGUIListView.h",
			"settings":
			{
				"buffer_size": 506,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/EntityCollectionGUIView.cpp",
			"settings":
			{
				"buffer_size": 559,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/EntityCollectionGUIView.h",
			"settings":
			{
				"buffer_size": 1496,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "game/GameState.cpp",
			"settings":
			{
				"buffer_size": 2186,
				"line_ending": "Unix"
			}
		},
		{
			"file": "inventory/InventoryArea.cpp",
			"settings":
			{
				"buffer_size": 13511,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "inventory/InventoryArea.h",
			"settings":
			{
				"buffer_size": 1702,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "inventory/InventorySlot.h",
			"settings":
			{
				"buffer_size": 2176,
				"line_ending": "Unix"
			}
		},
		{
			"file": "components/modifiers/Physical.cpp",
			"settings":
			{
				"buffer_size": 646,
				"line_ending": "Unix"
			}
		},
		{
			"file": "systems/SystemNarrator.cpp",
			"settings":
			{
				"buffer_size": 28667,
				"line_ending": "Unix"
			}
		},
		{
			"file": "systems/SystemNarrator.h",
			"settings":
			{
				"buffer_size": 12595,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"CMakeF",
				"CMake Format: Format Selection"
			],
			[
				"CMake Format",
				"CMake Format: Set Path"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"CMake",
				"Set Syntax: CMake"
			],
			[
				"mark",
				"Set Syntax: Markdown"
			],
			[
				"Markdown",
				"Set Syntax: Markdown"
			],
			[
				"markdown",
				"Set Syntax: Markdown"
			],
			[
				"markdown gfm",
				"Set Syntax: Markdown GFM"
			],
			[
				"sort",
				"SortList: Sort List"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install package control",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 207.800003052,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/greglindsey/personal/projects/MetaHack",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns",
		"/home/greglindsey/personal/projects/MetaHack/gui",
		"/home/greglindsey/personal/projects/MetaHack/inventory",
		"/home/greglindsey/personal/projects/MetaHack/maptile",
		"/home/greglindsey/personal/projects/MetaHack/systems",
		"/home/greglindsey/personal/projects/MetaHack/views"
	],
	"file_history":
	[
		"/home/greglindsey/personal/projects/MetaHack/include/stdafx.h",
		"/home/greglindsey/personal/projects/MetaHack/gui/GUIWindow.cpp",
		"/home/greglindsey/personal/projects/MetaHack/sfgui_extensions/DecoratedWidget.hpp",
		"/home/greglindsey/personal/projects/MetaHack/sfgui_extensions/Decorated.hpp",
		"/home/greglindsey/personal/projects/MetaHack/game/AppStateGameMode.cpp",
		"/home/greglindsey/personal/projects/MetaHack/game/App.h",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns/Event.cpp",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns/Event.h",
		"/home/greglindsey/personal/projects/MetaHack/game/GameState.h",
		"/home/greglindsey/personal/projects/MetaHack/gui/GUIObject.cpp",
		"/home/greglindsey/personal/projects/MetaHack/inventory/InventoryArea.cpp",
		"/home/greglindsey/personal/projects/MetaHack/views/InventoryGUIView.cpp",
		"/home/greglindsey/personal/projects/MetaHack/main.cpp",
		"/home/greglindsey/personal/projects/MetaHack/systems/Manager.cpp",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns/Serializable.h",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns/Object.cpp",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns/Object.h",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns/ObjectRegistry.cpp",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns/ObjectRegistry.h",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns/Serializable.cpp",
		"/home/greglindsey/personal/projects/MetaHack/sfgui_extensions/Decorator.inc",
		"/home/greglindsey/personal/projects/MetaHack/state_machine/StateMachine.cpp",
		"/home/greglindsey/personal/projects/MetaHack/game_windows/StatusArea.cpp",
		"/home/greglindsey/personal/projects/MetaHack/game_windows/MessageLogView.cpp",
		"/home/greglindsey/personal/projects/MetaHack/gui/GUIDesktop.cpp",
		"/home/greglindsey/personal/projects/MetaHack/systems/SystemGeometry.h",
		"/home/greglindsey/personal/projects/MetaHack/systems/SystemGeometry.cpp",
		"/home/greglindsey/personal/projects/MetaHack/systems/SystemChoreographer.cpp",
		"/home/greglindsey/personal/projects/MetaHack/views/InventoryGUIListView.cpp",
		"/home/greglindsey/personal/projects/MetaHack/inventory/InventoryArea.h",
		"/home/greglindsey/personal/projects/MetaHack/entity/EntityId.h",
		"/home/greglindsey/personal/projects/MetaHack/entity/EntityId.cpp",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentPosition.h",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentPosition.cpp",
		"/home/greglindsey/personal/projects/MetaHack/game/AppStateGameMode.h",
		"/home/greglindsey/personal/projects/MetaHack/game/App.cpp",
		"/home/greglindsey/personal/projects/MetaHack/gui/GUIObject.h",
		"/home/greglindsey/personal/projects/MetaHack/text/UI.txt",
		"/home/greglindsey/personal/projects/MetaHack/inventory/InventorySelection.h",
		"/home/greglindsey/personal/projects/MetaHack/views/InventoryGUIView.h",
		"/home/greglindsey/personal/projects/MetaHack/views/EntityView.h",
		"/home/greglindsey/personal/projects/MetaHack/views/EntityView.cpp",
		"/home/greglindsey/personal/projects/MetaHack/views/EntityGUIView.h",
		"/home/greglindsey/personal/projects/MetaHack/views/EntityGUIView.cpp",
		"/home/greglindsey/personal/projects/MetaHack/views/EntityGUIIconView.h",
		"/home/greglindsey/personal/projects/MetaHack/views/EntityGUIIconView.cpp",
		"/home/greglindsey/personal/projects/MetaHack/CMakeLists.txt",
		"/home/greglindsey/personal/projects/MetaHack/views/InventoryGUIListView.h",
		"/home/greglindsey/personal/projects/MetaHack/views/Standard2DGraphicViews.h",
		"/home/greglindsey/personal/projects/MetaHack/game_windows/StatusArea.h",
		"/home/greglindsey/personal/projects/MetaHack/game_windows/MessageLogView.h",
		"/home/greglindsey/personal/projects/MetaHack/services/FallbackConfigSettings.cpp",
		"/home/greglindsey/personal/projects/SFGUI/CMakeLists.txt",
		"/home/greglindsey/personal/projects/SFGUI/cmake/Modules/FindSFML.cmake",
		"/home/greglindsey/personal/projects/MetaHack/cmake_modules/FindSFML.cmake",
		"/home/greglindsey/personal/projects/MetaHack/SFGUI/CMakeLists.txt",
		"/home/greglindsey/personal/projects/MetaHack/.gitmodules",
		"/home/greglindsey/personal/projects/MetaHack/game/AppState.h",
		"/home/greglindsey/personal/projects/MetaHack/keybuffer/KeyBuffer.h",
		"/home/greglindsey/personal/projects/MetaHack/services/IMessageLog.h",
		"/home/greglindsey/personal/projects/MetaHack/services/IMessageLog.cpp",
		"/home/greglindsey/personal/projects/MetaHack/services/MessageLog.cpp",
		"/home/greglindsey/personal/projects/MetaHack/state_machine/State.h",
		"/home/greglindsey/personal/projects/MetaHack/keybuffer/KeyBuffer.cpp",
		"/home/greglindsey/personal/projects/MetaHack/gui/GUIWindow.h",
		"/home/greglindsey/personal/projects/MetaHack/sfgui_extensions/Widgets.hpp",
		"/home/greglindsey/personal/projects/MetaHack/sfgui_extensions/ListBox.hpp",
		"/home/greglindsey/personal/projects/MetaHack/sfgui_extensions/ListBox.cpp",
		"/home/greglindsey/personal/projects/MetaHack/sfgui_extensions/EntryPlus.hpp",
		"/home/greglindsey/personal/projects/MetaHack/sfgui_extensions/EntryPlus.cpp",
		"/home/greglindsey/personal/projects/MetaHack/game/AppStateMainMenu.cpp",
		"/home/greglindsey/personal/projects/MetaHack/game/AppStateMainMenu.h",
		"/home/greglindsey/personal/projects/MetaHack/game/AppStateSplashScreen.cpp",
		"/home/greglindsey/personal/projects/MetaHack/game/AppStateSplashScreen.h",
		"/home/greglindsey/personal/projects/MetaHack/systems/SystemJanitor.h",
		"/home/greglindsey/personal/projects/MetaHack/systems/SystemEditor.h",
		"/home/greglindsey/personal/projects/MetaHack/systems/SystemEditor.cpp",
		"/home/greglindsey/personal/projects/MetaHack/systems/SystemDirector.h",
		"/home/greglindsey/personal/projects/MetaHack/systems/SystemChoreographer.h",
		"/home/greglindsey/personal/projects/MetaHack/systems/Manager.h",
		"/home/greglindsey/personal/projects/MetaHack/types/DequeMap.h",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentManager.h",
		"/home/greglindsey/personal/projects/MetaHack/components/modifiers/Combustible.h",
		"/home/greglindsey/personal/projects/MetaHack/components/modifiers/Combustible.cpp",
		"/home/greglindsey/personal/projects/MetaHack/components/modifiers/Base.h",
		"/home/greglindsey/personal/projects/MetaHack/components/modifiers/Collection.h",
		"/home/greglindsey/personal/projects/MetaHack/components/modifiers/VectorMap.h",
		"/home/greglindsey/personal/projects/MetaHack/components/modifiers/Physical.h",
		"/home/greglindsey/personal/projects/MetaHack/components/modifiers/Physical.cpp",
		"/home/greglindsey/personal/projects/MetaHack/text/Modifiers.txt",
		"/home/greglindsey/personal/projects/MetaHack/types/ModifiableInt.h",
		"/home/greglindsey/personal/projects/MetaHack/types/ModifiableInt.cpp",
		"/home/greglindsey/personal/projects/MetaHack/types/ModifiableBool.h",
		"/home/greglindsey/personal/projects/MetaHack/types/ModifiableBool.cpp",
		"/home/greglindsey/personal/projects/MetaHack/maptile/MapTile.cpp",
		"/home/greglindsey/personal/projects/MetaHack/entity/EntityFactory.cpp",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentPhysical.h",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentPhysical.cpp",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentMap.h",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentManager.cpp",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentInventory.cpp",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentHealth.h",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentHealth.cpp",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentGender.h",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentCorrodible.h",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentCorrodible.cpp",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentCombustible.h",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentCombustible.cpp",
		"/home/greglindsey/personal/projects/MetaHack/types/Clamped.h",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentBase.h",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentCRTP.h",
		"/home/greglindsey/personal/projects/MetaHack/systems/CRTP.h",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentTemplate.h",
		"/home/greglindsey/personal/projects/MetaHack/components/ComponentGlobals.h",
		"/home/greglindsey/personal/projects/MetaHack/actions/Action.h",
		"/home/greglindsey/personal/projects/MetaHack/actions/ActionCRTP.h",
		"/home/greglindsey/personal/projects/MetaHack/systems/Base.h",
		"/home/greglindsey/personal/projects/MetaHack/design_patterns/Visitor.h",
		"/home/greglindsey/personal/projects/MetaHack/views/MapView.h",
		"/home/greglindsey/personal/projects/MetaHack/views/MapTileStandard2DView.cpp",
		"/home/greglindsey/personal/projects/MetaHack/maptile/MapTile.h",
		"/home/greglindsey/personal/projects/MetaHack/lua/LuaObject.h",
		"/home/greglindsey/personal/projects/MetaHack/lua/LuaObject.cpp",
		"/home/greglindsey/personal/projects/MetaHack/types/GameObject.h",
		"/home/greglindsey/personal/projects/MetaHack/doxygen_log.txt",
		"/home/greglindsey/personal/projects/MetaHack/views/MapTileStandard2DView.h",
		"/home/greglindsey/personal/projects/MetaHack/views/MapTileFancyAsciiView.h",
		"/home/greglindsey/personal/projects/MetaHack/views/MapTileFancyAsciiView.cpp"
	],
	"find":
	{
		"height": 44.0
	},
	"find_in_files":
	{
		"height": 136.6,
		"where_history":
		[
			"*.c,*.cpp,*.h",
			"",
			"types",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"EXPAND",
			"InventorySlot",
			"CloseHandle",
			"ResizeHandle",
			"CollapseHandle",
			"CloseHandle",
			"m_gameState.components",
			"GAME.components",
			"Got event",
			"Object.cpp",
			"NEW",
			"demangle",
			"addObserver",
			"demangle",
			"CLOG",
			"SYSTEMS",
			"\"StatusArea\"",
			"  \n",
			"doEventSubscriptions_V",
			"IKeyBuffer",
			"KeyBuffer",
			"\"AppStateGameMode\"",
			"\"GUI\"",
			"MessageLogView",
			"::id",
			"onEvent_V",
			"get_enter",
			"m_box",
			"SetCursor",
			"std::bind",
			"\"GUI\"",
			"frame_clock",
			"VectorMap",
			"m_vectorMap",
			"VectorMap",
			"VectorMap.h",
			"int.h",
			"ModifiableInt",
			"bool.h",
			"ModifiableBool",
			"0ULL",
			"m_modifierArrayMap",
			"ModifierArrayMap",
			"types/GameObject.h",
			"getDisplayName",
			"GameObject",
			"getDisplayName",
			"find",
			"unexpected",
			"@todo",
			"**TODO**",
			"@todo",
			"**TODO**",
			"\n  ",
			"**TODO**",
			"TODO",
			"**TODO**",
			"@todo",
			"<>",
			"\\todo",
			"276",
			"277",
			"276",
			"@todo",
			"LIBRARY_LINKDIRS",
			"main.cpp"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"m_layout",
			"frameClock",
			"DequeMap",
			"m_dequeMap",
			"DequeMap",
			"int",
			"bool",
			"m_modifierVectorMap",
			"ModifierVectorMap",
			"**TODO**"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10210,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										265,
										278
									],
									[
										498,
										511
									],
									[
										769,
										782
									],
									[
										928,
										941
									],
									[
										949,
										962
									],
									[
										976,
										989
									],
									[
										1135,
										1148
									],
									[
										1243,
										1256
									],
									[
										1398,
										1411
									],
									[
										1490,
										1503
									],
									[
										1632,
										1645
									],
									[
										1832,
										1845
									],
									[
										2030,
										2043
									],
									[
										2094,
										2107
									],
									[
										2346,
										2359
									],
									[
										2513,
										2526
									],
									[
										2553,
										2566
									],
									[
										2635,
										2648
									],
									[
										2826,
										2839
									],
									[
										3089,
										3102
									],
									[
										3333,
										3346
									],
									[
										3630,
										3643
									],
									[
										3850,
										3863
									],
									[
										3967,
										3980
									],
									[
										4139,
										4152
									],
									[
										4278,
										4291
									],
									[
										4400,
										4413
									],
									[
										4555,
										4568
									],
									[
										4750,
										4763
									],
									[
										4948,
										4961
									],
									[
										5091,
										5104
									],
									[
										5247,
										5260
									],
									[
										5340,
										5353
									],
									[
										5549,
										5562
									],
									[
										5695,
										5708
									],
									[
										5793,
										5806
									],
									[
										5943,
										5956
									],
									[
										6188,
										6201
									],
									[
										6248,
										6261
									],
									[
										6262,
										6275
									],
									[
										6284,
										6297
									],
									[
										6309,
										6322
									],
									[
										6323,
										6336
									],
									[
										6344,
										6357
									],
									[
										6369,
										6382
									],
									[
										6383,
										6396
									],
									[
										6404,
										6417
									],
									[
										6440,
										6453
									],
									[
										6454,
										6467
									],
									[
										6479,
										6492
									],
									[
										6541,
										6554
									],
									[
										6674,
										6687
									],
									[
										6718,
										6731
									],
									[
										6792,
										6805
									],
									[
										6916,
										6929
									],
									[
										7149,
										7162
									],
									[
										7196,
										7209
									],
									[
										7277,
										7290
									],
									[
										7378,
										7391
									],
									[
										7495,
										7508
									],
									[
										7589,
										7602
									],
									[
										7641,
										7654
									],
									[
										7743,
										7756
									],
									[
										7837,
										7850
									],
									[
										7889,
										7902
									],
									[
										8041,
										8054
									],
									[
										8183,
										8196
									],
									[
										8211,
										8224
									],
									[
										8351,
										8364
									],
									[
										8379,
										8392
									],
									[
										8515,
										8528
									],
									[
										8543,
										8556
									],
									[
										8682,
										8695
									],
									[
										8710,
										8723
									],
									[
										8845,
										8858
									],
									[
										8873,
										8886
									],
									[
										9008,
										9021
									],
									[
										9036,
										9049
									],
									[
										9178,
										9191
									],
									[
										9251,
										9264
									],
									[
										9325,
										9338
									],
									[
										9361,
										9374
									],
									[
										9396,
										9409
									],
									[
										9431,
										9444
									],
									[
										9769,
										9775
									],
									[
										10077,
										10083
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								10183,
								10183
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										6970,
										6971
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"default_dir": "/home/greglindsey/personal/projects/MetaHack",
							"detect_indentation": false,
							"git_gutter_is_enabled": false,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1547223766.12,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7018.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27153,
						"regions":
						{
						},
						"selection":
						[
							[
								3557,
								3557
							]
						],
						"settings":
						{
							"SL.35.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										3574,
										3575
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										3564,
										3565
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/CMake/CMake.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1547222977.51,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1716.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "components/ComponentInventory.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8879,
						"regions":
						{
						},
						"selection":
						[
							[
								2775,
								2775
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										2778,
										2779
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										2591,
										2592
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2778,
										2779
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										2591,
										2592
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1547218622.89,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2244.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "components/ComponentInventory.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3538,
						"regions":
						{
						},
						"selection":
						[
							[
								451,
								451
							]
						],
						"settings":
						{
							"SL.136.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										3420,
										3421
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										450,
										451
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3504,
										3505
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										450,
										451
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1547218607.98,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "components/ComponentManager.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6711,
						"regions":
						{
						},
						"selection":
						[
							[
								2881,
								2881
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										1271,
										1272
									]
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										1487,
										1488
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1547217802.08,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1573.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "views/EntityCollectionGUIListView.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1329,
						"regions":
						{
						},
						"selection":
						[
							[
								1087,
								1087
							]
						],
						"settings":
						{
							"SL.93.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										1363,
										1364
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										632,
										633
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1093,
										1094
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1074,
										1075
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1547224449.16,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 198.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "views/EntityCollectionGUIListView.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 506,
						"regions":
						{
						},
						"selection":
						[
							[
								493,
								493
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										503,
										504
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										212,
										213
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										503,
										504
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										212,
										213
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tabs_extra_last_activated": 1547223743.69,
							"tabs_extra_last_activated_sheet_index": 6
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "views/EntityCollectionGUIView.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 559,
						"regions":
						{
						},
						"selection":
						[
							[
								486,
								486
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										222,
										223
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										221,
										222
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tabs_extra_last_activated": 1547223748.69,
							"tabs_extra_last_activated_sheet_index": 7
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "views/EntityCollectionGUIView.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1496,
						"regions":
						{
						},
						"selection":
						[
							[
								99,
								99
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										112,
										113
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										80,
										81
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										112,
										113
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										80,
										81
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1547223747.41,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "game/GameState.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2186,
						"regions":
						{
						},
						"selection":
						[
							[
								1793,
								1793
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1547217517.16,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1485.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "inventory/InventoryArea.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13511,
						"regions":
						{
						},
						"selection":
						[
							[
								4777,
								4777
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										4780,
										4781
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1233,
										1234
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										4865,
										4866
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1547223764.74,
							"tabs_extra_last_activated_sheet_index": 10,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1837.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "inventory/InventoryArea.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1702,
						"regions":
						{
						},
						"selection":
						[
							[
								1325,
								1325
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1699,
										1700
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										355,
										356
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1547218220.33,
							"tabs_extra_last_activated_sheet_index": 11,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 792.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "inventory/InventorySlot.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2176,
						"regions":
						{
						},
						"selection":
						[
							[
								183,
								183
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										201,
										202
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										183,
										184
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1547218449.1,
							"tabs_extra_last_activated_sheet_index": 12,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "components/modifiers/Physical.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 646,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1547222221.33,
							"tabs_extra_last_activated_sheet_index": 13,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "systems/SystemNarrator.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28667,
						"regions":
						{
						},
						"selection":
						[
							[
								5850,
								5850
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										5849,
										5850
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										5695,
										5696
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1547223944.19,
							"tabs_extra_last_activated_sheet_index": 14,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4081.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "systems/SystemNarrator.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12595,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1547223964.06,
							"tabs_extra_last_activated_sheet_index": 15,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3168.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 31.0
	},
	"input":
	{
		"height": 52.8
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 196.600006104
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "MetaHack.sublime-project",
	"replace":
	{
		"height": 79.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"SystemNarrator.h",
				"systems/SystemNarrator.h"
			],
			[
				"stdafx.h",
				"include/stdafx.h"
			],
			[
				"ComponentInventory.cpp",
				"components/ComponentInventory.cpp"
			],
			[
				"ComponentInventory.h",
				"components/ComponentInventory.h"
			],
			[
				"CMake",
				"CMakeLists.txt"
			],
			[
				"Event.cpp",
				"design_patterns/Event.cpp"
			],
			[
				"Manager.cpp",
				"systems/Manager.cpp"
			],
			[
				"App.h",
				"game/App.h"
			],
			[
				"CMakeLists.txt",
				"CMakeLists.txt"
			],
			[
				"Event.h",
				"design_patterns/Event.h"
			],
			[
				"AppStateGameMode.cpp",
				"game/AppStateGameMode.cpp"
			],
			[
				"Object.cpp",
				"design_patterns/Object.cpp"
			],
			[
				"Object.h",
				"design_patterns/Object.h"
			],
			[
				"EntityId.cpp",
				"entity/EntityId.cpp"
			],
			[
				"EntityId.h",
				"entity/EntityId.h"
			],
			[
				"COmponentPosition.h",
				"components/ComponentPosition.h"
			],
			[
				"App.cpp",
				"game/App.cpp"
			],
			[
				"GUIObject.cpp",
				"gui/GUIObject.cpp"
			],
			[
				"SystemCho",
				"systems/SystemChoreographer.cpp"
			],
			[
				"Status",
				"game_windows/StatusArea.cpp"
			],
			[
				"EntityId.",
				"entity/EntityId.cpp"
			],
			[
				"EntityView.cpp",
				"views/EntityView.cpp"
			],
			[
				"InventorySelection.h",
				"inventory/InventorySelection.h"
			],
			[
				"UI.txt",
				"text/UI.txt"
			],
			[
				"CMakeLists",
				"SFGUI/CMakeLists.txt"
			],
			[
				".gitmodules",
				".gitmodules"
			],
			[
				"CMak",
				"CMakeLists.txt"
			],
			[
				"StatusArea.cpp",
				"game_windows/StatusArea.cpp"
			],
			[
				"MessageLogView",
				"game_windows/MessageLogView.cpp"
			],
			[
				"MessageLog.cpp",
				"services/MessageLog.cpp"
			],
			[
				"KeyBuffer.cpp",
				"keybuffer/KeyBuffer.cpp"
			],
			[
				"KeyBuffer.h",
				"keybuffer/KeyBuffer.h"
			],
			[
				"AppStateGameMode.h",
				"game/AppStateGameMode.h"
			],
			[
				"Key",
				"keybuffer/KeyBuffer.cpp"
			],
			[
				"main.cpp",
				"main.cpp"
			],
			[
				"App.c",
				"game/App.cpp"
			],
			[
				"MessageLogView.cpp",
				"game_windows/MessageLogView.cpp"
			],
			[
				"MapTile.cpp",
				"maptile/MapTile.cpp"
			],
			[
				"ComponentManager.cpp",
				"components/ComponentManager.cpp"
			],
			[
				"ComponentInventory",
				"components/ComponentInventory.cpp"
			],
			[
				"ComponentHealth.cpp",
				"components/ComponentHealth.cpp"
			],
			[
				"ActionCRTP.h",
				"actions/ActionCRTP.h"
			],
			[
				"Action.h",
				"actions/Action.h"
			],
			[
				"CMakeL",
				"CMakeLists.txt"
			],
			[
				"GameObject.h",
				"types/GameObject.h"
			],
			[
				"doxygen_log.txt",
				"doxygen_log.txt"
			],
			[
				"LuaObject.h",
				"lua/LuaObject.h"
			],
			[
				"Visitor.h",
				"design_patterns/Visitor.h"
			],
			[
				"Color.h",
				"types/Color.h"
			],
			[
				"LuaObject.cpp",
				"lua/LuaObject.cpp"
			],
			[
				"main",
				"main.cpp"
			],
			[
				"EntityFac",
				"entity/EntityFactory.cpp"
			],
			[
				"FindSFGUI",
				"cmake_modules/FindSFGUI.cmake"
			],
			[
				"Vec2.cpp",
				"types/Vec2.cpp"
			],
			[
				"Vec2.h",
				"types/Vec2.h"
			],
			[
				"resque.rb",
				"config/initializers/resque.rb"
			],
			[
				"environment.rb",
				"config/environment.rb"
			],
			[
				"Gemfile.lock",
				"Gemfile.lock"
			],
			[
				"application.rb",
				"config/application.rb"
			],
			[
				"spec_helper.rb",
				"spec/spec_helper.rb"
			],
			[
				"Appr",
				"Appraisals"
			],
			[
				"candidate/home_controller",
				"app/controllers/candidate/home_controller.rb"
			],
			[
				"users_controller.rb",
				"app/controllers/users_controller.rb"
			],
			[
				"sessions_controller",
				"app/controllers/sessions_controller.rb"
			],
			[
				"root_routes",
				"config/routes/root_routes.rb"
			],
			[
				"routes.rb",
				"config/routes.rb"
			],
			[
				"v2_routes",
				"config/routes/api/v2.2_routes.rb"
			],
			[
				"rails_helper",
				"spec/rails_helper.rb"
			],
			[
				"event_attendees/repository.rb",
				"lib/event_attendees/repository.rb"
			],
			[
				"v2/r2/events_controller.rb",
				"app/controllers/api/v2/r2/events_controller.rb"
			],
			[
				"api_rou",
				"config/routes/api/v2.2_routes.rb"
			],
			[
				"application_controller_spec.rb",
				"spec/controllers/application_controller_spec.rb"
			],
			[
				"Gemfile",
				"Gemfile"
			],
			[
				"production",
				"config/environments/production.rb"
			],
			[
				"html_sanitiz",
				"spec/concern/html_sanitizer_concern_spec.rb"
			],
			[
				"html_strin",
				"spec/utility/html_string_sanitizer_spec.rb"
			],
			[
				"REA",
				"README.md"
			],
			[
				"README",
				"client/node_modules/colors/ReadMe.md"
			],
			[
				"html_string_",
				"spec/utility/html_string_sanitizer_spec.rb"
			],
			[
				"utility/html",
				"lib/utility/html_string_sanitizer.rb"
			],
			[
				".ruby-version",
				".ruby-version"
			],
			[
				"job_logging_spec",
				"spec/redis_jobs/job_logging_spec.rb"
			],
			[
				"redis_job",
				"lib/redis_jobs/base_job.rb"
			],
			[
				"redis_helper_spec.rb",
				"spec/recsolu/redis_helper_spec.rb"
			],
			[
				"redis_helper",
				"lib/recsolu/redis_helper.rb"
			],
			[
				"html_sanitizer_concern.rb",
				"app/controllers/concerns/html_sanitizer_concern.rb"
			],
			[
				"yellogger_spec",
				"spec/initializers/yellogger_spec.rb"
			],
			[
				"yellogger.rb",
				"config/initializers/yellogger.rb"
			],
			[
				"string_saniti",
				"spec/utility/html_string_sanitizer_spec.rb"
			],
			[
				"html_string",
				"lib/utility/html_string_sanitizer.rb"
			],
			[
				"workflow_attach",
				"app/models/workflow_attachment.rb"
			],
			[
				"rc_micro",
				"rc_microsoft_structure.sql"
			],
			[
				"spec/initi",
				"spec/initializers/yellogger_spec.rb"
			],
			[
				"application_record.rb",
				"app/models/application_record.rb"
			],
			[
				"html_string_sanitizer_spec",
				"spec/utility/html_string_sanitizer_spec.rb"
			],
			[
				"old_sanit",
				"lib/utility/sanitizers/old_html_input_sanitizer.rb"
			],
			[
				"html_sani",
				"spec/concern/html_sanitizer_concern_spec.rb"
			],
			[
				"html_",
				"lib/concerns/html_sanitizer_concern.rb"
			],
			[
				"html_string_sanitizer_spec.rb",
				"spec/utility/html_string_sanitizer_spec.rb"
			],
			[
				"html_string_sanitizer.rb",
				"lib/utility/html_string_sanitizer.rb"
			],
			[
				"old",
				"lib/utility/sanitizers/old_html_input_sanitizer.rb"
			],
			[
				"settings_controller",
				"app/controllers/users/candidates/profile/settings_controller.rb"
			],
			[
				"settings_controller_spec.rb",
				"spec/controllers/candidate/profile/settings_controller_spec.rb"
			],
			[
				"field_answer_formatter_spec",
				"spec/excel_exporter/utility/field_answer_formatter_spec.rb"
			],
			[
				"html_sanitizer_concern_spec.rb",
				"spec/concerns/html_sanitizer_concern_spec.rb"
			],
			[
				"html_string_sani",
				"lib/utility/html_string_sanitizer.rb"
			],
			[
				"Gemfiles",
				"client/node_modules/draft-js/lib/getTextContentFromFiles.js"
			],
			[
				"old_",
				"lib/utility/sanitizers/old_html_input_sanitizer.rb"
			],
			[
				"html_saniti",
				"spec/concerns/html_sanitizer_concern_spec.rb"
			],
			[
				"presenters/users/index_presenter.rb",
				"app/presenters/users/index_presenter.rb"
			],
			[
				"spec/presenters/users/index_",
				"spec/presenters/users/index_presenter_spec.rb"
			],
			[
				"environments/production.rb",
				"config/environments/production.rb"
			],
			[
				"translation_controll",
				"app/controllers/admin/translations_controller.rb"
			],
			[
				"strong_par",
				"config/initializers/strong_parameter_testing.rb"
			],
			[
				"users_controller",
				"app/controllers/users_controller.rb"
			],
			[
				"strong_param",
				"config/initializers/strong_parameters.rb"
			],
			[
				"test.rb",
				"config/environments/test.rb"
			],
			[
				"develop",
				"config/environments/development.rb"
			],
			[
				"ApplicationRecord",
				"app/models/application_record.rb"
			],
			[
				"events/ar_model.rb",
				"lib/events/ar_model.rb"
			],
			[
				"lib/events/creation/director.rb",
				"lib/events/creation/director.rb"
			],
			[
				"session_repository.rb",
				"lib/events/session_repository.rb"
			],
			[
				"users/repository.rb",
				"lib/users/repository.rb"
			],
			[
				"session_attendance.rb",
				"app/models/session_attendance.rb"
			],
			[
				"document_converter.rb",
				"app/models/document_converter.rb"
			],
			[
				"strong_parameters.rb",
				"config/initializers/strong_parameters.rb"
			],
			[
				"development.rb",
				"config/environments/development.rb"
			],
			[
				"events/repository.rb",
				"lib/events/repository.rb"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 625.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/apps/yellogger.sublime-project"
			]
		],
		"width": 475.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 326.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
